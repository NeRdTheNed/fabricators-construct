plugins {
	id 'fabric-loom' version '0.4.3'
	id 'maven-publish'
	id 'net.minecrell.licenser' version '0.4.1'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven {
		name = 'JitPack'
		url = 'https://jitpack.io/'
	}
	maven {
		name = "Cotton"
		url = "https://server.bbkr.space/artifactory/libs-release"
	}
	maven {
		name = "Half's Github"
		url = 'https://raw.githubusercontent.com/Devan-Kerman/Devan-Repo/master/'
	}
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "io.github.prospector:modmenu:${project.modmenu_version}"

	modApi "me.sargunvohra.mcmods:autoconfig1u:${project.autoconfig_version}"
	include "me.sargunvohra.mcmods:autoconfig1u:${project.autoconfig_version}"

	modCompile "net.devtech:arrp:0.1.8"
	modImplementation "io.github.cottonmc:UniversalComponents:${project.univ_comp_version}"
	include "io.github.cottonmc:UniversalComponents:${project.univ_comp_version}"

//	modImplementation "com.github.shedaniel:improved-stations:0d80fc9988" // 1.2.5-1.15

	modImplementation "me.shedaniel:RoughlyEnoughItems:${project.rei_version}"

	// Resources
	modApi "io.github.cottonmc:cotton-resources:${project.cotton_resources_version}+${project.minecraft_version}"
//	modImplementation "TechReborn:TechReborn-1.15:${project.tech_reborn_version}"

	modImplementation("com.github.TerraformersMC:Terrestria:${project.terrestria_commit}") {
		exclude group: "curse.maven"
	}

	modRuntime "com.github.jellysquid3:sodium-fabric:${project.sodium_commit}"
	modRuntime "com.github.jellysquid3:Lithium:${project.lithium_commit}"
	modRuntime "com.github.jellysquid3:phosphor-fabric:${project.phosphor_commit}"
}

license {
	header = project.file('HEADER')
	ext {
		name = 'halotroop, SlimeKnights'
		year = 2020
	}
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}
	// select the repositories you want to publish to
	repositories {
		File gh = new File(projectDir.parentFile.parentFile, "util/troop-maven")
		System.out.println(gh)
		if(gh.exists()) {
			maven {
				url = gh.absolutePath
			}
		}
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}